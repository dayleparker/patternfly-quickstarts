{"ast":null,"code":"import React from 'react';\nimport { Badge } from '@patternfly/react-core';\nimport { Table, TableHeader, TableBody, cellWidth } from '@patternfly/react-table';\nimport { AutoLinkHeader } from '../autoLinkHeader/autoLinkHeader';\nimport { PropTypeWithLinks } from './propTypeWithLinks';\nimport { css } from '@patternfly/react-styles';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nexport var PropsTable = function PropsTable(_ref) {\n  var title = _ref.title,\n      rows = _ref.rows,\n      allPropComponents = _ref.allPropComponents;\n  var columns = [{\n    title: 'Name',\n    transforms: [cellWidth(20)]\n  }, {\n    title: 'Type',\n    transforms: [cellWidth(20)]\n  }, {\n    title: 'Default',\n    transforms: []\n  }, {\n    title: 'Description',\n    transforms: []\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    size: \"h3\"\n  }, title), /*#__PURE__*/React.createElement(Table, {\n    className: \"pf-u-mt-md pf-u-mb-lg\",\n    variant: \"compact\",\n    \"aria-label\": title,\n    caption: /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ws-prop-required\"\n    }, \"*\"), \"required\"),\n    cells: columns,\n    gridBreakPoint: \"grid-lg\",\n    rows: rows // Sort required rows first\n    .sort(function (a, b) {\n      return a.required === b.required ? 0 : a.required ? -1 : 1;\n    }).map(function (row, idx) {\n      return {\n        cells: [/*#__PURE__*/React.createElement(\"div\", {\n          className: \"pf-m-break-word\"\n        }, row.deprecated && 'Deprecated: ', row.name, row.required ? /*#__PURE__*/React.createElement(React.Fragment, {\n          key: row.name + \"-required-prop\"\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"aria-hidden\": \"true\",\n          key: row.name + \"-asterisk\",\n          className: \"ws-prop-required\"\n        }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n          key: row.name + \"-required\",\n          className: css(accessibleStyles.screenReader)\n        }, \"required\")) : '', row.beta && /*#__PURE__*/React.createElement(Badge, {\n          key: row.name + \"-\" + idx,\n          className: \"ws-beta-badge pf-u-ml-sm\"\n        }, \"Beta\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pf-m-break-word\"\n        }, /*#__PURE__*/React.createElement(PropTypeWithLinks, {\n          type: row.type,\n          allPropComponents: allPropComponents\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pf-m-break-word\"\n        }, row.defaultValue), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pf-m-break-word\"\n        }, row.description)]\n      };\n    })\n  }, /*#__PURE__*/React.createElement(TableHeader, null), /*#__PURE__*/React.createElement(TableBody, null)));\n};","map":{"version":3,"names":["React","Badge","Table","TableHeader","TableBody","cellWidth","AutoLinkHeader","PropTypeWithLinks","css","accessibleStyles","PropsTable","title","rows","allPropComponents","columns","transforms","sort","a","b","required","map","row","idx","cells","deprecated","name","screenReader","beta","type","defaultValue","description"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/module/node_modules/@patternfly/documentation-framework/components/propsTable/propsTable.js"],"sourcesContent":["import React from 'react';\nimport { Badge } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  cellWidth\n} from '@patternfly/react-table';\nimport { AutoLinkHeader } from '../autoLinkHeader/autoLinkHeader';\nimport { PropTypeWithLinks } from './propTypeWithLinks';\nimport { css } from '@patternfly/react-styles';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\n\nexport const PropsTable = ({\n  title,\n  rows,\n  allPropComponents\n}) => {\n  const columns = [\n    { title: 'Name', transforms: [cellWidth(20)] },\n    { title: 'Type', transforms: [cellWidth(20)] },\n    { title: 'Default', transforms: [] },\n    { title: 'Description', transforms: [] }\n  ];\n\n  return (\n    <React.Fragment>\n      <AutoLinkHeader size=\"h3\">\n        {title}\n      </AutoLinkHeader>\n      <Table\n        className=\"pf-u-mt-md pf-u-mb-lg\"\n        variant=\"compact\"\n        aria-label={title}\n        caption={<div><span className=\"ws-prop-required\">*</span>required</div>}\n        cells={columns}\n        gridBreakPoint=\"grid-lg\"\n        rows={rows\n          // Sort required rows first\n          .sort((a,b) => a.required === b.required\n            ? 0\n            : a.required ? -1 : 1)\n          .map((row, idx) => ({\n            cells: [\n              <div className=\"pf-m-break-word\">\n                {row.deprecated && 'Deprecated: '}\n                {row.name}\n                {row.required ? (\n                  <React.Fragment key={`${row.name}-required-prop`}>\n                    <span aria-hidden=\"true\" key={`${row.name}-asterisk`} className=\"ws-prop-required\">\n                      *\n                    </span>\n                    <span key={`${row.name}-required`} className={css(accessibleStyles.screenReader)}>\n                      required\n                    </span>\n                  </React.Fragment>\n                ) : ''}\n                {row.beta && (\n                  <Badge key={`${row.name}-${idx}`} className=\"ws-beta-badge pf-u-ml-sm\">\n                    Beta\n                  </Badge>\n                )}\n              </div>,\n              <div className=\"pf-m-break-word\">\n                <PropTypeWithLinks type={row.type} allPropComponents={allPropComponents} />\n              </div>,\n              <div className=\"pf-m-break-word\">\n                {row.defaultValue}\n              </div>,\n              <div className=\"pf-m-break-word\">\n                {row.description}\n              </div>\n            ]\n          }))\n        }\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </React.Fragment>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,SAJF,QAKO,yBALP;AAMA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,gBAAP,MAA6B,oEAA7B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAIpB;EAAA,IAHJC,KAGI,QAHJA,KAGI;EAAA,IAFJC,IAEI,QAFJA,IAEI;EAAA,IADJC,iBACI,QADJA,iBACI;EACJ,IAAMC,OAAO,GAAG,CACd;IAAEH,KAAK,EAAE,MAAT;IAAiBI,UAAU,EAAE,CAACV,SAAS,CAAC,EAAD,CAAV;EAA7B,CADc,EAEd;IAAEM,KAAK,EAAE,MAAT;IAAiBI,UAAU,EAAE,CAACV,SAAS,CAAC,EAAD,CAAV;EAA7B,CAFc,EAGd;IAAEM,KAAK,EAAE,SAAT;IAAoBI,UAAU,EAAE;EAAhC,CAHc,EAId;IAAEJ,KAAK,EAAE,aAAT;IAAwBI,UAAU,EAAE;EAApC,CAJc,CAAhB;EAOA,oBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAgB,IAAI,EAAC;EAArB,GACGJ,KADH,CADF,eAIE,oBAAC,KAAD;IACE,SAAS,EAAC,uBADZ;IAEE,OAAO,EAAC,SAFV;IAGE,cAAYA,KAHd;IAIE,OAAO,eAAE,8CAAK;MAAM,SAAS,EAAC;IAAhB,OAAL,aAJX;IAKE,KAAK,EAAEG,OALT;IAME,cAAc,EAAC,SANjB;IAOE,IAAI,EAAEF,IAAI,CACR;IADQ,CAEPI,IAFG,CAEE,UAACC,CAAD,EAAGC,CAAH;MAAA,OAASD,CAAC,CAACE,QAAF,KAAeD,CAAC,CAACC,QAAjB,GACX,CADW,GAEXF,CAAC,CAACE,QAAF,GAAa,CAAC,CAAd,GAAkB,CAFhB;IAAA,CAFF,EAKHC,GALG,CAKC,UAACC,GAAD,EAAMC,GAAN;MAAA,OAAe;QAClBC,KAAK,EAAE,cACL;UAAK,SAAS,EAAC;QAAf,GACGF,GAAG,CAACG,UAAJ,IAAkB,cADrB,EAEGH,GAAG,CAACI,IAFP,EAGGJ,GAAG,CAACF,QAAJ,gBACC,oBAAC,KAAD,CAAO,QAAP;UAAgB,GAAG,EAAKE,GAAG,CAACI,IAAT;QAAnB,gBACE;UAAM,eAAY,MAAlB;UAAyB,GAAG,EAAKJ,GAAG,CAACI,IAAT,cAA5B;UAAsD,SAAS,EAAC;QAAhE,OADF,eAIE;UAAM,GAAG,EAAKJ,GAAG,CAACI,IAAT,cAAT;UAAmC,SAAS,EAAEjB,GAAG,CAACC,gBAAgB,CAACiB,YAAlB;QAAjD,cAJF,CADD,GASG,EAZN,EAaGL,GAAG,CAACM,IAAJ,iBACC,oBAAC,KAAD;UAAO,GAAG,EAAKN,GAAG,CAACI,IAAT,SAAiBH,GAA3B;UAAkC,SAAS,EAAC;QAA5C,UAdJ,CADK,eAoBL;UAAK,SAAS,EAAC;QAAf,gBACE,oBAAC,iBAAD;UAAmB,IAAI,EAAED,GAAG,CAACO,IAA7B;UAAmC,iBAAiB,EAAEf;QAAtD,EADF,CApBK,eAuBL;UAAK,SAAS,EAAC;QAAf,GACGQ,GAAG,CAACQ,YADP,CAvBK,eA0BL;UAAK,SAAS,EAAC;QAAf,GACGR,GAAG,CAACS,WADP,CA1BK;MADW,CAAf;IAAA,CALD;EAPR,gBA8CE,oBAAC,WAAD,OA9CF,eA+CE,oBAAC,SAAD,OA/CF,CAJF,CADF;AAwDD,CApEM"},"metadata":{},"sourceType":"module"}