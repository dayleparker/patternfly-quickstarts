{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from '@patternfly/documentation-framework/components';\nimport { quickStarts as exampleQuickStarts } from '../../../content/extensions/quickstarts/./example-data';\nimport { LoadingBox, QuickStartContainer, QuickStartCatalogPage, useLocalStorage } from '@patternfly/quickstarts';\nimport '@patternfly/quickstarts/dist/quickstarts.css';\nimport srcImportfullscreenexample from './Basic-Quick-Starts/fullscreen-example.png';\nvar pageData = {\n  \"id\": \"Quick Starts\",\n  \"section\": \"Extensions\",\n  \"source\": \"Basic-Quick-Starts\",\n  \"slug\": \"/extensions/quick-starts/Basic-Quick-Starts\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/module/patternfly-docs/content/extensions/quickstarts/tab--basic-quick-starts.md\",\n  \"propComponents\": [{\n    \"name\": \"QuickStartContainer\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"alwaysShowTaskReview\",\n      \"type\": \"No type info\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"loading\",\n      \"type\": \"No type info\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"useQueryParams\",\n      \"type\": \"No type info\",\n      \"defaultValue\": \"true\"\n    }]\n  }],\n  \"examples\": [\"Catalog Page\"],\n  \"fullscreenExamples\": [\"Fullscreen Example\"]\n};\npageData.liveContext = {\n  exampleQuickStarts: exampleQuickStarts,\n  LoadingBox: LoadingBox,\n  QuickStartContainer: QuickStartContainer,\n  QuickStartCatalogPage: QuickStartCatalogPage,\n  useLocalStorage: useLocalStorage\n};\npageData.examples = {\n  'Catalog Page': function CatalogPage(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import './App.css';\\nimport React from 'react';\\nimport {\\n  LoadingBox,\\n  QuickStartContainer,\\n  useLocalStorage,\\n  QuickStartCatalogPage\\n} from '@patternfly/quickstarts';\\nimport { quickStarts as exampleQuickStarts } from './example-data';\\n\\nconst App = ({ showCardFooters }) => {\\n  const [activeQuickStartID, setActiveQuickStartID] = useLocalStorage('quickstartId', '');\\n  const [allQuickStartStates, setAllQuickStartStates] = useLocalStorage('quickstarts', {});\\n  const language = localStorage.getItem('bridge/language') || 'en';\\n\\n  // eslint-disable-next-line no-console\\n  React.useEffect(() => console.log(activeQuickStartID), [activeQuickStartID]);\\n  React.useEffect(() => {\\n    // callback on state change\\n    // eslint-disable-next-line no-console\\n    console.log(allQuickStartStates);\\n  }, [allQuickStartStates]);\\n\\n  const [loading, setLoading] = React.useState(true);\\n  const [quickStarts, setQuickStarts] = React.useState([]);\\n  React.useEffect(() => {\\n    const load = async () => {\\n      setQuickStarts(exampleQuickStarts);\\n      setLoading(false);\\n    };\\n    setTimeout(() => {\\n      load();\\n    }, 500);\\n  }, []);\\n\\n  const drawerProps = {\\n    quickStarts,\\n    activeQuickStartID,\\n    allQuickStartStates,\\n    setActiveQuickStartID,\\n    setAllQuickStartStates,\\n    showCardFooters,\\n    language,\\n    loading,\\n    alwaysShowTaskReview: true,\\n    markdown: {\\n      extensions: [\\n        // variable substitution\\n        {\\n          type: 'output',\\n          filter: function(html) {\\n            html = html.replace(/\\\\[APPLICATION\\\\]/g, 'Mercury');\\n            html = html.replace(/\\\\[PRODUCT\\\\]/g, 'Lightning');\\n\\n            return html;\\n          },\\n        },\\n      ],\\n    },\\n  };\\n\\n  return (\\n    <React.Suspense fallback={<LoadingBox />}>\\n      <QuickStartContainer {...drawerProps}>\\n        <QuickStartCatalogPage\\n          title=\\\"Quick starts\\\"\\n          hint={'Learn how to create, import, and run applications with step-by-step instructions and tasks.'}\\n        />\\n      </QuickStartContainer>\\n    </React.Suspense>\\n  );\\n};\\n\",\n      \"title\": \"Catalog Page\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Fullscreen Example': function FullscreenExample(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportfullscreenexample,\n      \"code\": \"import './App.css';\\nimport React from 'react';\\nimport {\\n  LoadingBox,\\n  QuickStartContainer,\\n  useLocalStorage,\\n  QuickStartCatalogPage\\n} from '@patternfly/quickstarts';\\nimport { quickStarts as exampleQuickStarts } from './example-data';\\n\\nconst App = ({ showCardFooters }) => {\\n  const [activeQuickStartID, setActiveQuickStartID] = useLocalStorage('quickstartId', '');\\n  const [allQuickStartStates, setAllQuickStartStates] = useLocalStorage('quickstarts', {});\\n  const language = localStorage.getItem('bridge/language') || 'en';\\n\\n  // eslint-disable-next-line no-console\\n  React.useEffect(() => console.log(activeQuickStartID), [activeQuickStartID]);\\n  React.useEffect(() => {\\n    // callback on state change\\n    // eslint-disable-next-line no-console\\n    console.log(allQuickStartStates);\\n  }, [allQuickStartStates]);\\n\\n  const [loading, setLoading] = React.useState(true);\\n  const [quickStarts, setQuickStarts] = React.useState([]);\\n  React.useEffect(() => {\\n    const load = async () => {\\n      setQuickStarts(exampleQuickStarts);\\n      setLoading(false);\\n    };\\n    setTimeout(() => {\\n      load();\\n    }, 500);\\n  }, []);\\n\\n  const drawerProps = {\\n    quickStarts,\\n    activeQuickStartID,\\n    allQuickStartStates,\\n    setActiveQuickStartID,\\n    setAllQuickStartStates,\\n    showCardFooters,\\n    language,\\n    loading,\\n    alwaysShowTaskReview: true,\\n    markdown: {\\n      extensions: [\\n        // variable substitution\\n        {\\n          type: 'output',\\n          filter: function(html) {\\n            html = html.replace(/\\\\[APPLICATION\\\\]/g, 'Mercury');\\n            html = html.replace(/\\\\[PRODUCT\\\\]/g, 'Lightning');\\n\\n            return html;\\n          },\\n        },\\n      ],\\n    },\\n  };\\n\\n  return (\\n    <React.Suspense fallback={<LoadingBox />}>\\n      <QuickStartContainer {...drawerProps}>\\n        <QuickStartCatalogPage\\n          title=\\\"Quick starts\\\"\\n          hint={'Learn how to create, import, and run applications with step-by-step instructions and tasks.'}\\n        />\\n      </QuickStartContainer>\\n    </React.Suspense>\\n  );\\n};\\n\",\n      \"title\": \"Fullscreen Example\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"basic-quick-starts-usage\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Basic Quick Starts Usage\"), React.createElement(pageData.examples[\"Catalog Page\"]), React.createElement(pageData.examples[\"Fullscreen Example\"]));\n};\n\nComponent.displayName = 'ExtensionsQuickStartsBasicQuickStartsDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","quickStarts","exampleQuickStarts","LoadingBox","QuickStartContainer","QuickStartCatalogPage","useLocalStorage","srcImportfullscreenexample","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/module/patternfly-docs/generated/extensions/quick-starts/Basic-Quick-Starts.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from '@patternfly/documentation-framework/components';\nimport { quickStarts as exampleQuickStarts } from '../../../content/extensions/quickstarts/./example-data';\nimport {\n  LoadingBox,\n  QuickStartContainer,\n  QuickStartCatalogPage,\n  useLocalStorage,\n} from '@patternfly/quickstarts';\nimport '@patternfly/quickstarts/dist/quickstarts.css';\nimport srcImportfullscreenexample from './Basic-Quick-Starts/fullscreen-example.png';\nconst pageData = {\n  \"id\": \"Quick Starts\",\n  \"section\": \"Extensions\",\n  \"source\": \"Basic-Quick-Starts\",\n  \"slug\": \"/extensions/quick-starts/Basic-Quick-Starts\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/module/patternfly-docs/content/extensions/quickstarts/tab--basic-quick-starts.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"QuickStartContainer\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"alwaysShowTaskReview\",\n          \"type\": \"No type info\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"loading\",\n          \"type\": \"No type info\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"useQueryParams\",\n          \"type\": \"No type info\",\n          \"defaultValue\": \"true\"\n        }\n      ]\n    }\n  ],\n  \"examples\": [\n    \"Catalog Page\"\n  ],\n  \"fullscreenExamples\": [\n    \"Fullscreen Example\"\n  ]\n};\npageData.liveContext = {\n  exampleQuickStarts,\n  LoadingBox,\n  QuickStartContainer,\n  QuickStartCatalogPage,\n  useLocalStorage\n};\npageData.examples = {\n  'Catalog Page': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import './App.css';\\nimport React from 'react';\\nimport {\\n  LoadingBox,\\n  QuickStartContainer,\\n  useLocalStorage,\\n  QuickStartCatalogPage\\n} from '@patternfly/quickstarts';\\nimport { quickStarts as exampleQuickStarts } from './example-data';\\n\\nconst App = ({ showCardFooters }) => {\\n  const [activeQuickStartID, setActiveQuickStartID] = useLocalStorage('quickstartId', '');\\n  const [allQuickStartStates, setAllQuickStartStates] = useLocalStorage('quickstarts', {});\\n  const language = localStorage.getItem('bridge/language') || 'en';\\n\\n  // eslint-disable-next-line no-console\\n  React.useEffect(() => console.log(activeQuickStartID), [activeQuickStartID]);\\n  React.useEffect(() => {\\n    // callback on state change\\n    // eslint-disable-next-line no-console\\n    console.log(allQuickStartStates);\\n  }, [allQuickStartStates]);\\n\\n  const [loading, setLoading] = React.useState(true);\\n  const [quickStarts, setQuickStarts] = React.useState([]);\\n  React.useEffect(() => {\\n    const load = async () => {\\n      setQuickStarts(exampleQuickStarts);\\n      setLoading(false);\\n    };\\n    setTimeout(() => {\\n      load();\\n    }, 500);\\n  }, []);\\n\\n  const drawerProps = {\\n    quickStarts,\\n    activeQuickStartID,\\n    allQuickStartStates,\\n    setActiveQuickStartID,\\n    setAllQuickStartStates,\\n    showCardFooters,\\n    language,\\n    loading,\\n    alwaysShowTaskReview: true,\\n    markdown: {\\n      extensions: [\\n        // variable substitution\\n        {\\n          type: 'output',\\n          filter: function(html) {\\n            html = html.replace(/\\\\[APPLICATION\\\\]/g, 'Mercury');\\n            html = html.replace(/\\\\[PRODUCT\\\\]/g, 'Lightning');\\n\\n            return html;\\n          },\\n        },\\n      ],\\n    },\\n  };\\n\\n  return (\\n    <React.Suspense fallback={<LoadingBox />}>\\n      <QuickStartContainer {...drawerProps}>\\n        <QuickStartCatalogPage\\n          title=\\\"Quick starts\\\"\\n          hint={'Learn how to create, import, and run applications with step-by-step instructions and tasks.'}\\n        />\\n      </QuickStartContainer>\\n    </React.Suspense>\\n  );\\n};\\n\",\"title\":\"Catalog Page\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Fullscreen Example': props => \n    <Example {...pageData} {...props} thumbnail={srcImportfullscreenexample} {...{\"code\":\"import './App.css';\\nimport React from 'react';\\nimport {\\n  LoadingBox,\\n  QuickStartContainer,\\n  useLocalStorage,\\n  QuickStartCatalogPage\\n} from '@patternfly/quickstarts';\\nimport { quickStarts as exampleQuickStarts } from './example-data';\\n\\nconst App = ({ showCardFooters }) => {\\n  const [activeQuickStartID, setActiveQuickStartID] = useLocalStorage('quickstartId', '');\\n  const [allQuickStartStates, setAllQuickStartStates] = useLocalStorage('quickstarts', {});\\n  const language = localStorage.getItem('bridge/language') || 'en';\\n\\n  // eslint-disable-next-line no-console\\n  React.useEffect(() => console.log(activeQuickStartID), [activeQuickStartID]);\\n  React.useEffect(() => {\\n    // callback on state change\\n    // eslint-disable-next-line no-console\\n    console.log(allQuickStartStates);\\n  }, [allQuickStartStates]);\\n\\n  const [loading, setLoading] = React.useState(true);\\n  const [quickStarts, setQuickStarts] = React.useState([]);\\n  React.useEffect(() => {\\n    const load = async () => {\\n      setQuickStarts(exampleQuickStarts);\\n      setLoading(false);\\n    };\\n    setTimeout(() => {\\n      load();\\n    }, 500);\\n  }, []);\\n\\n  const drawerProps = {\\n    quickStarts,\\n    activeQuickStartID,\\n    allQuickStartStates,\\n    setActiveQuickStartID,\\n    setAllQuickStartStates,\\n    showCardFooters,\\n    language,\\n    loading,\\n    alwaysShowTaskReview: true,\\n    markdown: {\\n      extensions: [\\n        // variable substitution\\n        {\\n          type: 'output',\\n          filter: function(html) {\\n            html = html.replace(/\\\\[APPLICATION\\\\]/g, 'Mercury');\\n            html = html.replace(/\\\\[PRODUCT\\\\]/g, 'Lightning');\\n\\n            return html;\\n          },\\n        },\\n      ],\\n    },\\n  };\\n\\n  return (\\n    <React.Suspense fallback={<LoadingBox />}>\\n      <QuickStartContainer {...drawerProps}>\\n        <QuickStartCatalogPage\\n          title=\\\"Quick starts\\\"\\n          hint={'Learn how to create, import, and run applications with step-by-step instructions and tasks.'}\\n        />\\n      </QuickStartContainer>\\n    </React.Suspense>\\n  );\\n};\\n\",\"title\":\"Fullscreen Example\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"basic-quick-starts-usage\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Basic Quick Starts Usage`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Catalog Page\"])}\n    {React.createElement(pageData.examples[\"Fullscreen Example\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ExtensionsQuickStartsBasicQuickStartsDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,gDAArE;AACA,SAASC,WAAW,IAAIC,kBAAxB,QAAkD,wDAAlD;AACA,SACEC,UADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,eAJF,QAKO,yBALP;AAMA,OAAO,8CAAP;AACA,OAAOC,0BAAP,MAAuC,6CAAvC;AACA,IAAMC,QAAQ,GAAG;EACf,MAAM,cADS;EAEf,WAAW,YAFI;EAGf,UAAU,oBAHK;EAIf,QAAQ,6CAJO;EAKf,cAAc,kJALC;EAMf,kBAAkB,CAChB;IACE,QAAQ,qBADV;IAEE,eAAe,EAFjB;IAGE,SAAS,CACP;MACE,QAAQ,sBADV;MAEE,QAAQ,cAFV;MAGE,gBAAgB;IAHlB,CADO,EAMP;MACE,QAAQ,SADV;MAEE,QAAQ,cAFV;MAGE,gBAAgB;IAHlB,CANO,EAWP;MACE,QAAQ,gBADV;MAEE,QAAQ,cAFV;MAGE,gBAAgB;IAHlB,CAXO;EAHX,CADgB,CANH;EA6Bf,YAAY,CACV,cADU,CA7BG;EAgCf,sBAAsB,CACpB,oBADoB;AAhCP,CAAjB;AAoCAA,QAAQ,CAACC,WAAT,GAAuB;EACrBP,kBAAkB,EAAlBA,kBADqB;EAErBC,UAAU,EAAVA,UAFqB;EAGrBC,mBAAmB,EAAnBA,mBAHqB;EAIrBC,qBAAqB,EAArBA,qBAJqB;EAKrBC,eAAe,EAAfA;AALqB,CAAvB;AAOAE,QAAQ,CAACE,QAAT,GAAoB;EAClB,gBAAgB,qBAAAC,KAAK;IAAA,oBACnB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,mkEAA9C;MAAknE,SAAQ,cAA1nE;MAAyoE,QAAO;IAAhpE,GADmB;EAAA,CADH;EAKlB,sBAAsB,2BAAAA,KAAK;IAAA,oBACzB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEJ,0BAA7C;MAA8E,QAAO,mkEAArF;MAAypE,SAAQ,oBAAjqE;MAAsrE,QAAO,IAA7rE;MAAksE,gBAAe;IAAjtE,GADyB;EAAA;AALT,CAApB;;AAWA,IAAMK,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,0BAA1B;IAAqD,QAAO,IAA5D;IAAiE,aAAY;EAA7E,8BADF,EAIGhB,KAAK,CAACiB,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,cAAlB,CAApB,CAJH,EAKGd,KAAK,CAACiB,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,oBAAlB,CAApB,CALH,CADgB;AAAA,CAAlB;;AASAE,SAAS,CAACE,WAAV,GAAwB,2CAAxB;AACAF,SAAS,CAACJ,QAAV,GAAqBA,QAArB;AAEA,eAAeI,SAAf"},"metadata":{},"sourceType":"module"}